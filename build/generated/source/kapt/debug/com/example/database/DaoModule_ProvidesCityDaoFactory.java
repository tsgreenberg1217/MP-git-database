// Generated by Dagger (https://dagger.dev).
package com.example.database;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DaoModule_ProvidesCityDaoFactory implements Factory<CityDao> {
  private final Provider<WeatherDatabase> dbProvider;

  public DaoModule_ProvidesCityDaoFactory(Provider<WeatherDatabase> dbProvider) {
    this.dbProvider = dbProvider;
  }

  @Override
  public CityDao get() {
    return providesCityDao(dbProvider.get());
  }

  public static DaoModule_ProvidesCityDaoFactory create(Provider<WeatherDatabase> dbProvider) {
    return new DaoModule_ProvidesCityDaoFactory(dbProvider);
  }

  public static CityDao providesCityDao(WeatherDatabase db) {
    return Preconditions.checkNotNullFromProvides(DaoModule.INSTANCE.providesCityDao(db));
  }
}
